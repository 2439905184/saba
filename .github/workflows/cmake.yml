name: CMake

on:
  push:
    branches: [ master ,build]
  pull_request:
    branches: [ master ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  windows:
   runs-on: windows-latest

   steps:
    - uses: actions/checkout@v2

    - uses: actions/checkout@v2
      with:
        repository: microsoft/vcpkg
        ref: master
    - name: setup
      run: |
        .\vcpkg\vcpkg install glfw3
        .\vcpkg\vcpkg search bullet
        dir
    - name: Build
      run: |
        cmake -G "Visual Studio 14 2015 Win64" 
        -D INSTALL_LIBS=ON 
        -D USE_MSVC_RUNTIME_LIBRARY_DLL=On 
        -D BUILD_CPU_DEMOS=Off 
        -D BUILD_OPENGL3_DEMOS=Off 
        -D BUILD_BULLET2_DEMOS=Off 
        -D BUILD_UNIT_TESTS=Off 
        cmake --build . --config Debug --target ALL_BUILD
        cmake --build . --config Debug --target INSTALL
        cmake --build . --config Release --target ALL_BUILD
        mkdir build
        cd build
        cmake ..
        dir
    #cmake -G "Visual Studio 14 2015 Win64" -D SABA_BULLET_ROOT=<Your Bullet Physics install directory> -D SABA_GLFW_ROOT=<your GLFW install directory> 
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: config libs
      run: |
        sudo apt-get install libbullet-dev
        sudo apt-get install libglfw3-dev
    #- name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
     # run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      run: |
        mkdir build
        cd build
        cmake ..
        make -j4
        ls -l build

      #run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}}
      
